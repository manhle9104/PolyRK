/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Image;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ChatLieu;
import model.KichCo;
import model.Mau;
import model.SanPham;
import model.SanPhamChiTiet;
import model.XuatXu;
import service.SanPhamChiTietService;
import javax.swing.JOptionPane;
import model.HoaDon;
import model.HoaDonChiTiet;
import model.KhuyenMai;
import service.Auth;
import service.HoaDonService;

/**
 *
 * @author GIGABYTE
 */
public class BanHangTaiQuayJFrame extends javax.swing.JFrame {

    List<SanPhamChiTiet> lstspct = new ArrayList<>();
    HoaDonService hdsv = new HoaDonService();
    String idnv;
    int soluong = 0;
    int slctsp = 0;
    int index = -1;
    int index1 = -1;
    int index2 = -1;
    SanPhamChiTietService spctsv = new SanPhamChiTietService();
    private DecimalFormat decimalFormat = new DecimalFormat("#,###");
    

    /**
     * Creates new form BanHangTaiQuayJFrame
     */
    public BanHangTaiQuayJFrame() {
        initComponents();
        setTitle("Bán hàng tại quầy");
        setLocationRelativeTo(null);
//        setIconImage();
        Icon icon = new ImageIcon(getClass().getResource("/racket.png"));
        Image icon1 = new ImageIcon(getClass().getResource("/vot.png")).getImage();
        setIconImage(icon1);
        fillComboBox();
//        jLabel2.setIcon(icon);

        fillHoaDon(hdsv.getAll());
        filltable(spctsv.getAllbanhang());

    }

    void fillComboBox() {

        DefaultComboBoxModel model = (DefaultComboBoxModel) cboMaKM.getModel();
        model.removeAllElements();
        try {
            List<KhuyenMai> list = spctsv.getkm();

            for (KhuyenMai m : list) {
                model.addElement(m);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Loi Ma khuyen mai");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        TaoHoaDonPnl = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        cboMaKM = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        DanhSachHdPnl = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDanhSachDon = new javax.swing.JTable();
        GioHangPnl = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblGioHang = new javax.swing.JTable();
        SanPhamPnl = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        TimBtn = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        taoHdonBtn = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 255, 153));

        TaoHoaDonPnl.setBackground(new java.awt.Color(153, 255, 153));
        TaoHoaDonPnl.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("ID hóa đơn");

        jTextField1.setEditable(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Ghi chú");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane4.setViewportView(jTextArea1);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Mã khuyến mại");

        cboMaKM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboMaKM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMaKMActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 51, 51));
        jLabel10.setText("Tổng Tiền:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 51, 51));
        jLabel12.setText("Tiền Phải Trả:");

        jButton3.setBackground(new java.awt.Color(0, 255, 51));
        jButton3.setText("Áp Mã");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel16.setText("jLabel13");

        jLabel15.setText("jLabel13");

        javax.swing.GroupLayout TaoHoaDonPnlLayout = new javax.swing.GroupLayout(TaoHoaDonPnl);
        TaoHoaDonPnl.setLayout(TaoHoaDonPnlLayout);
        TaoHoaDonPnlLayout.setHorizontalGroup(
            TaoHoaDonPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TaoHoaDonPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TaoHoaDonPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1)
                    .addComponent(cboMaKM, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                    .addGroup(TaoHoaDonPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(TaoHoaDonPnlLayout.createSequentialGroup()
                            .addGroup(TaoHoaDonPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel10)
                                .addComponent(jLabel12))
                            .addGap(13, 13, 13)
                            .addGroup(TaoHoaDonPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(TaoHoaDonPnlLayout.createSequentialGroup()
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(TaoHoaDonPnlLayout.createSequentialGroup()
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGroup(TaoHoaDonPnlLayout.createSequentialGroup()
                            .addGroup(TaoHoaDonPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(jLabel9)
                                .addComponent(jLabel7))
                            .addGap(0, 0, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(TaoHoaDonPnlLayout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        TaoHoaDonPnlLayout.setVerticalGroup(
            TaoHoaDonPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TaoHoaDonPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(cboMaKM, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TaoHoaDonPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TaoHoaDonPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel15))
                .addContainerGap(194, Short.MAX_VALUE))
        );

        DanhSachHdPnl.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        tblDanhSachDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Ngày bán", "Tổng tiền", "Trạng thái", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDanhSachDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDanhSachDonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDanhSachDon);

        javax.swing.GroupLayout DanhSachHdPnlLayout = new javax.swing.GroupLayout(DanhSachHdPnl);
        DanhSachHdPnl.setLayout(DanhSachHdPnlLayout);
        DanhSachHdPnlLayout.setHorizontalGroup(
            DanhSachHdPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 920, Short.MAX_VALUE)
        );
        DanhSachHdPnlLayout.setVerticalGroup(
            DanhSachHdPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DanhSachHdPnlLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        GioHangPnl.setBackground(new java.awt.Color(255, 255, 255));
        GioHangPnl.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        tblGioHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Tên SP", "Xuất Xứ", "Màu", "Kích cỡ", "Chất liệu", "Số lượng", "Giá bán", "Tổng Giá", "IDHDCT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblGioHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblGioHangMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblGioHangMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblGioHang);
        if (tblGioHang.getColumnModel().getColumnCount() > 0) {
            tblGioHang.getColumnModel().getColumn(9).setMinWidth(0);
            tblGioHang.getColumnModel().getColumn(9).setPreferredWidth(0);
            tblGioHang.getColumnModel().getColumn(9).setMaxWidth(0);
        }

        javax.swing.GroupLayout GioHangPnlLayout = new javax.swing.GroupLayout(GioHangPnl);
        GioHangPnl.setLayout(GioHangPnlLayout);
        GioHangPnlLayout.setHorizontalGroup(
            GioHangPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 920, Short.MAX_VALUE)
        );
        GioHangPnlLayout.setVerticalGroup(
            GioHangPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        SanPhamPnl.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Tên SP", "Xuất xứ", "Màu sắc", "Kích cỡ", "Chất liệu", "Giá bán", "Số lượng", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblSanPham);
        if (tblSanPham.getColumnModel().getColumnCount() > 0) {
            tblSanPham.getColumnModel().getColumn(8).setMinWidth(0);
            tblSanPham.getColumnModel().getColumn(8).setPreferredWidth(0);
            tblSanPham.getColumnModel().getColumn(8).setMaxWidth(0);
        }

        javax.swing.GroupLayout SanPhamPnlLayout = new javax.swing.GroupLayout(SanPhamPnl);
        SanPhamPnl.setLayout(SanPhamPnlLayout);
        SanPhamPnlLayout.setHorizontalGroup(
            SanPhamPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE)
        );
        SanPhamPnlLayout.setVerticalGroup(
            SanPhamPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SanPhamPnlLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Giỏ hàng");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Danh sách hóa đơn chờ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Danh mục sản phẩm");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Hóa Đơn");

        TimBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimBtnActionPerformed(evt);
            }
        });

        jButton1.setText("Tìm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Tìm kiếm:");

        jButton2.setBackground(new java.awt.Color(0, 255, 51));
        jButton2.setText("THANH TOÁN");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        taoHdonBtn.setText("Tạo Hóa Đơn");
        taoHdonBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taoHdonBtnActionPerformed(evt);
            }
        });

        jButton4.setText("Sửa Số Lượng");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Xóa Hóa Đơn");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(322, 322, 322))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(TimBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(111, 111, 111))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addComponent(taoHdonBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(68, 68, 68)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(124, 124, 124))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(371, 371, 371)
                                .addComponent(jButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(GioHangPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DanhSachHdPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addComponent(SanPhamPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addComponent(TaoHoaDonPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton2, taoHdonBtn});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TaoHoaDonPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(DanhSachHdPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(taoHdonBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GioHangPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(TimBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SanPhamPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton2, taoHdonBtn});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TimBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TimBtnActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        index = tblDanhSachDon.getSelectedRow();
        int id = (int) tblDanhSachDon.getValueAt(index, 0);
        if (hdsv.updatetrangthai(id) != 0) {
            JOptionPane.showMessageDialog(this, "Thanh Toán Thành Công");
            fillHoaDon(hdsv.getAll());
        } else {
            JOptionPane.showMessageDialog(this, "Thanh Toán Thất Bại");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tblDanhSachDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhSachDonMouseClicked
        index = tblDanhSachDon.getSelectedRow();
        int id = (int) tblDanhSachDon.getValueAt(index, 0);
        filltableGioHang(hdsv.getallhdct(id));
        showdata(index);

    }//GEN-LAST:event_tblDanhSachDonMouseClicked

    private void tblGioHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGioHangMouseClicked

    }//GEN-LAST:event_tblGioHangMouseClicked

    private void taoHdonBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taoHdonBtnActionPerformed
        HoaDon hd = readformhd();

        if (hdsv.inserthoadon(hd) != 0) {
            JOptionPane.showMessageDialog(this, "thêm thành công");
            fillHoaDon(hdsv.getAll());
            int lastrow = tblDanhSachDon.getRowCount() - 1;
            tblDanhSachDon.changeSelection(lastrow, 0, false, false);
            
            showdata(lastrow);
        }
    }//GEN-LAST:event_taoHdonBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (checktim()) {
            int ma = Integer.parseInt(TimBtn.getText());

            if (spctsv.findname(ma) != null) {
                int check = 0;
//            filltable(spctsv.findname(ma));
                for (int i = 0; i < tblSanPham.getRowCount(); i++) {
                    int values = Integer.parseInt(tblSanPham.getValueAt(i, 0).toString());
                    if (values == ma) {
                        index = i;
                        check++;
                        break;//thoat ngay
                    }
                }
                if (check > 0) {
//                this.showdata(index);
                    tblSanPham.setRowSelectionInterval(index, index);
                } else {
                    JOptionPane.showMessageDialog(this, "Khong tim thay");
                }
            } else {
                JOptionPane.showMessageDialog(this, "khong tim thay");
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        if (index < 0) {
            JOptionPane.showMessageDialog(this, "hãy chọn hóa đơn cần thêm");
        }
        index = tblDanhSachDon.getSelectedRow();
        int id = (int) tblDanhSachDon.getValueAt(index, 0);

        int index1 = tblSanPham.getSelectedRow();
        int a = (int) tblSanPham.getValueAt(index1, 0);

        HoaDonChiTiet hdct = readformhdct();
        if (hdct != null) {
            if (hdsv.themgiohang(hdct) != 0) {
                filltableGioHang(hdsv.getallhdct(id));
                int lastrow = tblGioHang.getRowCount() - 1;
                tblGioHang.changeSelection(lastrow, 0, false, false);
                int b = tblGioHang.getSelectedRow();
                int c = (int) tblGioHang.getValueAt(b, 0);
                int d = (int) tblGioHang.getValueAt(b, 6);
                hdsv.updatectsp(d, c);
                hdsv.updatetongtienhoadon();

                fillHoaDon(hdsv.getAll());
                tblDanhSachDon.setRowSelectionInterval(index, index);
//                SanPhamChiTiet spct = new SanPhamChiTiet();
                filltable(spctsv.getAllbanhang());
//                filltableGioHang(hdsv.getallhdct(id));

                tblSanPham.setRowSelectionInterval(index1, index1);
            };
        }
        //       filltableGioHang(spctsv.getbyid(id));
    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void tblGioHangMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGioHangMousePressed
        if (evt.getClickCount() == 2) {
            index1 = tblDanhSachDon.getSelectedRow();
            int id1 = (int) tblDanhSachDon.getValueAt(index1, 0);
            index = tblGioHang.getSelectedRow();
            int id = (int) tblGioHang.getValueAt(index, 0);
            int a = (int) tblGioHang.getValueAt(index, 9);
            int d = (int) tblGioHang.getValueAt(index, 6);
            int input = JOptionPane.showConfirmDialog(this, "Bạn Có Muốn Xóa Sản Phẩm Này Ra Khỏi Giỏ Hàng Không");
            if (input == 0) {
//                hdsv.getbyidhdct(id);
                hdsv.updatectspsl(d, id);
                hdsv.xoakhoihdct(a);
                hdsv.updatetongtienhoadon();
                filltable(spctsv.getAllbanhang());
                filltableGioHang(hdsv.getallhdct(id1));

                fillHoaDon(hdsv.getAll());
                tblDanhSachDon.setRowSelectionInterval(index1, index1);

            }

//            filltableGioHang(hdsv.getallhdct(id));
//            filltableGioHang(hdsv.get);
        }
    }//GEN-LAST:event_tblGioHangMousePressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String input = JOptionPane.showInputDialog(this, "Nhập Số Lượng Muốn Sửa:");
//        index = tblSanPham.getSelectedRow();
//        slctsp = (int) tblSanPham.getValueAt(index, 7);

        index1 = tblGioHang.getSelectedRow();
        int slgh = (int) tblGioHang.getValueAt(index1, 6);
        int idspct = (int) tblGioHang.getValueAt(index1, 0);
        int idhdct = (int) tblGioHang.getValueAt(index1, 9);
        double dongia = (double) tblGioHang.getValueAt(index1, 7);
        index2 = tblDanhSachDon.getSelectedRow();
        int idhd = (int) tblDanhSachDon.getValueAt(index2, 0);
        SanPhamChiTiet spct = spctsv.findname(idspct);
        if (input != null) {
            try {
                soluong = Integer.parseInt(input);
                if (String.valueOf(soluong).trim().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Số lượng không được trống");
                } else {
                    if (soluong <= 0 || soluong > spct.getSoluong() + slgh) {
                        JOptionPane.showMessageDialog(this, "Số lượng nhập vào phải >0 Và Phải Nhỏ Hơn Số Lượng Hàng Còn");
                    } else {
                        if (soluong > slgh) {
                            hdsv.updatectsp(soluong - slgh, idspct);
                            hdsv.updateslhdct(soluong, idhdct);

                            hdsv.updatetongtienhoadonchitietsaukhisua(soluong * dongia, idhdct);

                            hdsv.updatetongtienhoadon();
                            filltableGioHang(hdsv.getallhdct(idhd));
                            tblGioHang.setRowSelectionInterval(index1, index1);
                            fillHoaDon(hdsv.getAll());
                            tblDanhSachDon.setRowSelectionInterval(index2, index2);
                            filltable(spctsv.getAllbanhang());
//                            tblSanPham.setRowSelectionInterval(index, index);

                        } else {
                            hdsv.updatectspsl(slgh - soluong, idspct);
                            hdsv.updateslhdct(soluong, idhdct);
                            hdsv.updatetongtienhoadonchitietsaukhisua(soluong * dongia, idhdct);
                            hdsv.updatetongtienhoadon();
                            filltableGioHang(hdsv.getallhdct(idhd));
                            tblGioHang.setRowSelectionInterval(index1, index1);
                            fillHoaDon(hdsv.getAll());
                            tblDanhSachDon.setRowSelectionInterval(index2, index2);
                            filltable(spctsv.getAllbanhang());
//                            tblSanPham.setRowSelectionInterval(index, index);
                        }
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Số lượng Nhập phải là số nguyên");
            }
        }


    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int hoi = JOptionPane.showConfirmDialog(this, "Bạn Có Muốn Xóa Hóa Đơn Này Không");
        if (hoi == 0) {
            if (tblGioHang.getRowCount() == 0) {
                index = tblDanhSachDon.getSelectedRow();
                int id = (int) tblDanhSachDon.getValueAt(index, 0);
                hdsv.xoahoadon(id);
                fillHoaDon(hdsv.getAll());
            } else {
                JOptionPane.showMessageDialog(this, "Bạn Chỉ Có Thể Xóa Hóa Đơn Trống");
            }

        }


    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        index = tblDanhSachDon.getSelectedRow();
        int idhd = (int) tblDanhSachDon.getValueAt(index, 0);
        if (hdsv.updatectkm(cboMaKM.getSelectedIndex(), idhd) != 0) {
            showdata(index);
        } else {
            JOptionPane.showMessageDialog(this, "Áp Mã Thất Bại");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void cboMaKMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMaKMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboMaKMActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BanHangTaiQuayJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BanHangTaiQuayJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BanHangTaiQuayJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BanHangTaiQuayJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BanHangTaiQuayJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DanhSachHdPnl;
    private javax.swing.JPanel GioHangPnl;
    private javax.swing.JPanel SanPhamPnl;
    private javax.swing.JPanel TaoHoaDonPnl;
    private javax.swing.JTextField TimBtn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cboMaKM;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton taoHdonBtn;
    private javax.swing.JTable tblDanhSachDon;
    private javax.swing.JTable tblGioHang;
    private javax.swing.JTable tblSanPham;
    // End of variables declaration//GEN-END:variables
//Camera responsi
    void filltable(List<SanPhamChiTiet> all) {
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) tblSanPham.getModel();
        model.setRowCount(0);
        for (SanPhamChiTiet sanPhamChiTiet : all) {
            model.addRow(sanPhamChiTiet.toDatarow1());
        }
    }

    boolean checktim() {
        try {
            int tim = Integer.parseInt(this.TimBtn.getText());
            return true;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Hãy Nhập Vào Đúng Số ID Sản Phẩm");
            return false;
        }
    }

    void showdata(int index) {
        HoaDon hd = hdsv.getAll().get(index);
        index = tblDanhSachDon.getSelectedRow();
        int a = (int) tblDanhSachDon.getValueAt(index, 0);
        jTextField1.setText(hd.getId() + "");
        jTextArea1.setText(hd.getGhiChu() + "");
        jLabel16.setText(decimalFormat.format(hd.getTongTien())+ "VNĐ");
        int makm = Integer.parseInt(hd.getKm().getId());
        if (makm == 0) {
            jLabel15.setText(decimalFormat.format(hd.getTongTien()) + "VNĐ");
            cboMaKM.setSelectedIndex(0);
//            rdoNotAllow.setSelected(true);
        } else {
            jLabel15.setText(decimalFormat.format(hd.getTongTien() - hd.getKm().getStg() - (hd.getTongTien() * (hd.getKm().getPtg() / 100))) + "VNĐ");
//            rdoAllow.setSelected(true);
            cboMaKM.setSelectedIndex(makm);
        }

    }

    void fillHoaDon(List<HoaDon> all) {
        DefaultTableModel model1 = new DefaultTableModel();
        model1 = (DefaultTableModel) tblDanhSachDon.getModel();
        model1.setRowCount(0);
        for (HoaDon hd : all) {
            model1.addRow(hd.toDataRow());
        }
    }

    void filltableGioHang(List<HoaDonChiTiet> all) {
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) tblGioHang.getModel();
        model.setRowCount(0);
        for (HoaDonChiTiet hoaDonChiTiet : all) {
            model.addRow(hoaDonChiTiet.toDataRow());
        }
    }

    private HoaDon readformhd() {
//        int idhd = Integer.parseInt(jTextField1.getText());
        LocalDate nb;
        nb = LocalDate.now();
        String ngayban = String.valueOf(nb);
//        double tongtien =0;
        String ghichu = jTextArea1.getText();
        idnv = Auth.user.getID();
        int makm = cboMaKM.getSelectedIndex();
        KhuyenMai km = new KhuyenMai(makm + "", "", Double.NaN, Double.NaN, "", "", ghichu);
        return new HoaDon(0, ngayban, true, 0, ghichu, km, idnv);
    }

    private HoaDonChiTiet readformhdct() {
        int index = tblSanPham.getSelectedRow();
        int idspct = (int) tblSanPham.getValueAt(index, 0);
        int index1 = tblDanhSachDon.getSelectedRow();
        int idhd = (int) tblDanhSachDon.getValueAt(index1, 0);
        slctsp = (int) tblSanPham.getValueAt(index, 7);
        double tongtien = 0;

        double giaban = (double) tblSanPham.getValueAt(index, 6);
        String input = JOptionPane.showInputDialog("Mời nhập số lượng:");
        if (input == null) {
            return null;
        } else {
            try {
                soluong = Integer.parseInt(input);
                if (String.valueOf(soluong).trim().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Số lượng không được trống");
                } else {
                    if (soluong <= 0 || soluong > slctsp) {
                        JOptionPane.showMessageDialog(this, "Số lượng nhập vào phải >0 Và Phải Nhỏ Hơn Số Lượng Hàng Còn");
                    } else {
                        SanPham sp = new SanPham(WIDTH, "", giaban, "", rootPaneCheckingEnabled);
                        KichCo kc = new KichCo(0, "");
                        ChatLieu cl = new ChatLieu(0, "");
                        Mau m = new Mau(0, "");
                        XuatXu xx = new XuatXu(0, "");
                        HoaDon hd = new HoaDon(idhd, "", true, 0, "", null, idnv);
                        SanPhamChiTiet spct = new SanPhamChiTiet(idspct, sp, 0, kc, cl, xx, m);
                        KhuyenMai km = null;
                        tongtien = soluong * giaban;
                        return new HoaDonChiTiet(WIDTH, hd, spct, km, soluong, tongtien);
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Số lượng Nhập phải là số nguyên");
            }
            return null;
        }
    }
}
